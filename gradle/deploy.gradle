apply plugin: 'com.jfrog.bintray'

bintray {
  // TODO read bintray settings from environment variables to allow publishing via CI
  user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
  key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
  if (project.name == 'asciidoctorj-distribution') {
    // NOTE ignore warning that install task does not exist; the plugin is looking for the wrong task!!
    configurations = ['archives']
    // FIXME asc for distribution zip doesn't get added by nebula-sign
    // NOTE it is added by normal signing plugin, but .asc extension replaces the archive extension instead of being appended to it
    filesSpec {
      //from project.tasks.signJars.getSignatureFiles()
      // FIXME WTF??? <flips table>
      from 'build/distributions'
      into "${project.group.replace('.', '/')}/${project(':asciidoctorj').name}/${project.version}"
      include '*.asc'
    }
  }
  else {
    publications = ['mavenNebula']
  }
  dryRun = project.hasProperty('dryRun') && project.dryRun.toBoolean()
  if (project.statusIsRelease) {
    publish = true
    // QUESTION should we make this task dependency permanent?
    bintrayUpload.dependsOn preparePublish
  }
  else {
    publish = false
  }

  pkg {
    repo = project.hasProperty('bintrayRepo') ? project.bintrayRepo : 'maven'
    //userOrg = 'asciidoctor' // only use if repository is owned by organization

    if (project.name == 'asciidoctorj-distribution') {
      name = project(':asciidoctorj').name
      desc = project(':asciidoctorj').description
    }
    else {
      // if we want artifacts in dedicated packages
      name = project.name
      desc = project.description

      // if we want all artifacts under one package
      //name = project(':asciidoctorj').name
      //desc = project(':asciidoctorj').description
    }

    licenses = ['Apache-2.0']
    labels = ['asciidoctor','asciidoctorj','asciidoc']
    //websiteUrl = 'http://asciidoctor.org'
    websiteUrl = 'https://github.com/asciidoctor/asciidoctorj'
    issueTrackerUrl = 'https://github.com/asciidoctor/asciidoctorj/issues'
    vcsUrl = 'https://github.com/asciidoctor/asciidoctorj'
    publicDownloadNumbers = true

    version {
      name = project.version
      vcsTag = "v${rootProject.version}"
      released = "$buildDateTime"
      // desc = ...
    }
  }
}
