jar.enabled = false

ext {
    arquillianVersion = '1.1.13.Final'
    arquillianWildflyVersion = '2.1.1.Final'
}

configurations {
    jbossmodule
}

dependencies {

    jbossmodule(project(':asciidoctorj-api')) {
        transitive = false
    }
    jbossmodule(project(':asciidoctorj')) {
        transitive = false
    }
    jbossmodule "org.jruby:jruby-complete:$jrubyVersion"

    testCompile "javax:javaee-api:7.0"
    testCompileOnly project(':asciidoctorj')
    testCompile "junit:junit:$junitVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testCompile "org.jboss.arquillian.junit:arquillian-junit-container:$arquillianVersion"
    testCompile "org.jsoup:jsoup:$jsoupVersion"

    testRuntime "org.wildfly.arquillian:wildfly-arquillian-container-managed:$arquillianWildflyVersion"
}

task createModule << {
    copy {
        from "src/test/resources/module.xml"
        into "build/modules/org/asciidoctor/asciidoctorj/main"
        filter {
            it
                    .replaceAll('@@version@@', project(':asciidoctorj').version)
                    .replaceAll('@@jrubyVersion@@', jrubyVersion)
        }
    }

    copy {
        from configurations.jbossmodule
        into "build/modules/org/asciidoctor/asciidoctorj/main"
    }
}


test {
    useJUnit {
        excludeCategories 'org.asciidoctor.categories.Wildfly'
    }

}

if (project.hasProperty('jboss.home')) {

    task integrationTest(type: Test) {
        useJUnit {
            includeCategories 'org.asciidoctor.categories.Wildfly'
        }

        testLogging {
            // events 'passed', 'failed', 'skipped', 'standard_out', 'standard_error'
            // events 'standard_out', 'standard_error'
            afterSuite { desc, result ->
                if (!desc.parent && logger.infoEnabled) {
                    logger.info "Test results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                }
            }
        }

        reports {
            html {
                destination file("$buildDir/reports/integrationTest")
            }
            junitXml {
                destination file("$buildDir/integrationTest")
            }
        }

        systemProperty('jboss.home', project.getProperty("jboss.home"))
        systemProperty('module.path', project.getProperty("jboss.home") + "/modules" + File.pathSeparator + file('build/modules').absolutePath)
    }

    integrationTest.dependsOn createModule
    integrationTest.dependsOn configurations.jbossmodule

}
